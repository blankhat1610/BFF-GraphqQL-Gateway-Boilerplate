// Code generated by protoc-gen-nexus. DO NOT EDIT.
// source: protos/helloworld/helloworld.proto

/* eslint-disable */

import { HelloReply as HelloReply2, HelloRequest as HelloRequest1 } from '@blankhat/apis/lib/protos/helloworld/helloworld_pb'
import { inputObjectType, nonNull, nullable, objectType } from 'nexus'

export type helloworld$HelloRequest = HelloRequest1
export const HelloRequest = objectType({
  name: 'HelloRequest',
  description: "The request message containing the user's name",
  definition: (t) => {
    t.field('name', {
      type: nonNull('String'),
      resolve: (source) => {
        const value = source.getName()
        return value
      },
      extensions: { protobufField: { name: 'name', typeFullName: 'string' } }
    })
  },
  isTypeOf: (data: unknown) => {
    return data instanceof HelloRequest1
  },
  sourceType: { module: __filename, export: 'helloworld$HelloRequest' },
  extensions: {
    protobufMessage: {
      fullName: 'helloworld.HelloRequest',
      name: 'HelloRequest',
      package: 'helloworld'
    }
  }
})

export type helloworld$HelloReply = HelloReply2
export const HelloReply = objectType({
  name: 'HelloReply',
  description: 'The response message containing the greetings',
  definition: (t) => {
    t.field('message', {
      type: nonNull('String'),
      resolve: (source) => {
        const value = source.getMessage()
        return value
      },
      extensions: {
        protobufField: { name: 'message', typeFullName: 'string' }
      }
    })
  },
  isTypeOf: (data: unknown) => {
    return data instanceof HelloReply2
  },
  sourceType: { module: __filename, export: 'helloworld$HelloReply' },
  extensions: {
    protobufMessage: {
      fullName: 'helloworld.HelloReply',
      name: 'HelloReply',
      package: 'helloworld'
    }
  }
})

export const HelloRequestInput = Object.assign(
  inputObjectType({
    name: 'HelloRequestInput',
    description: "The request message containing the user's name",
    definition: (t) => {
      t.field('name', {
        type: nonNull('String'),
        extensions: { protobufField: { name: 'name', typeFullName: 'string' } }
      })
    },
    extensions: {
      protobufMessage: {
        fullName: 'helloworld.HelloRequest',
        name: 'HelloRequest',
        package: 'helloworld'
      }
    }
  }),
  {
    toProto: (input: NexusGen['inputTypes']['HelloRequestInput']): HelloRequest1 => {
      const output = new HelloRequest1()
      output.setName(input.name)
      return output
    },
    _protoNexus: {
      fields: {
        name: {
          type: nonNull('String'),
          extensions: {
            protobufField: { name: 'name', typeFullName: 'string' }
          }
        }
      }
    }
  }
)

export const HelloRequestPartialInput = Object.assign(
  inputObjectType({
    name: 'HelloRequestPartialInput',
    description: "The request message containing the user's name",
    definition: (t) => {
      t.field('name', {
        type: nullable('String'),
        extensions: { protobufField: { name: 'name', typeFullName: 'string' } }
      })
    },
    extensions: {
      protobufMessage: {
        fullName: 'helloworld.HelloRequest',
        name: 'HelloRequest',
        package: 'helloworld'
      }
    }
  }),
  {
    toProto: (input: NexusGen['inputTypes']['HelloRequestPartialInput']): HelloRequest1 => {
      const output = new HelloRequest1()
      if (input.name != null) {
        output.setName(input.name)
      }
      return output
    },
    _protoNexus: {
      fields: {
        name: {
          type: nullable('String'),
          extensions: {
            protobufField: { name: 'name', typeFullName: 'string' }
          }
        }
      }
    }
  }
)

export const HelloReplyInput = Object.assign(
  inputObjectType({
    name: 'HelloReplyInput',
    description: 'The response message containing the greetings',
    definition: (t) => {
      t.field('message', {
        type: nonNull('String'),
        extensions: {
          protobufField: { name: 'message', typeFullName: 'string' }
        }
      })
    },
    extensions: {
      protobufMessage: {
        fullName: 'helloworld.HelloReply',
        name: 'HelloReply',
        package: 'helloworld'
      }
    }
  }),
  {
    toProto: (input: NexusGen['inputTypes']['HelloReplyInput']): HelloReply2 => {
      const output = new HelloReply2()
      output.setMessage(input.message)
      return output
    },
    _protoNexus: {
      fields: {
        message: {
          type: nonNull('String'),
          extensions: {
            protobufField: { name: 'message', typeFullName: 'string' }
          }
        }
      }
    }
  }
)

export const HelloReplyPartialInput = Object.assign(
  inputObjectType({
    name: 'HelloReplyPartialInput',
    description: 'The response message containing the greetings',
    definition: (t) => {
      t.field('message', {
        type: nullable('String'),
        extensions: {
          protobufField: { name: 'message', typeFullName: 'string' }
        }
      })
    },
    extensions: {
      protobufMessage: {
        fullName: 'helloworld.HelloReply',
        name: 'HelloReply',
        package: 'helloworld'
      }
    }
  }),
  {
    toProto: (input: NexusGen['inputTypes']['HelloReplyPartialInput']): HelloReply2 => {
      const output = new HelloReply2()
      if (input.message != null) {
        output.setMessage(input.message)
      }
      return output
    },
    _protoNexus: {
      fields: {
        message: {
          type: nullable('String'),
          extensions: {
            protobufField: { name: 'message', typeFullName: 'string' }
          }
        }
      }
    }
  }
)
